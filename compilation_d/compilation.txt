//compilation process


The compilation is a process of converting the source code into object code. It is done with the help of the 
compiler. The compiler checks the source code for the syntactical or structural errors, and if the source code 
is error-free, then it generates the object code.
 

Preprocessor
Compiler
Assembler
Linker

Preprocessor
The source code is the code which is written in a text editor and the source code file is given an extension ".c". This source code is first passed to the 

preprocessor, and then the preprocessor expands this code. After expanding the code, the expanded code is passed to the compiler.

Compiler
The code which is expanded by the preprocessor is passed to the compiler. The compiler converts this code into assembly code. Or we can say that the C 
compiler converts the pre-processed code into assembly code.

Assembler
The assembly code is converted into object code by using an assembler. The name of the object file generated by the assembler is the same as the source file.
 The extension of the object file in DOS is '.obj,' and in UNIX, the extension is 'o'. If the name of the source file is 'hello.c', then the name of the
 object file would be 'hello.obj'.

Linker
Mainly, all the programs written in C use library functions. These library functions are pre-compiled, and the object code of these library files is stored
 with '.lib' (or '.a') extension. The main working of the linker is to combine the object code of library files with the object code of our program.
 Sometimes the situation arises when our program refers to the functions defined in other files; then linker plays a very important role in this.
 It links the object code of these files to our program.